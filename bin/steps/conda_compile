#!/usr/bin/env bash
CONDA_VERSION=3.16.0 # --> Miniconda --> Miniconda3
if [ ! -d /app/.heroku/miniconda ]; then
    puts-step "Preparing Python/Miniconda Environment (${CONDA_VERSION})"
    
    echo "----- pre-install(curl Anaconda repo& execute miniconda.sh) -----"
    
    curl -Os https://repo.continuum.io/miniconda/Miniconda3-${CONDA_VERSION}-Linux-x86_64.sh
    # curl -Os http://repo.continuum.io/miniconda/Miniconda3-3.7.3-Linux-x86_64.sh
    # https://repo.continuum.io/miniconda/Miniconda-3.8.3-Linux-x86_64.sh
    # "Miniconda-${CONDA_VERSION}-Linux-x86_64.sh"ã€€become a file name
    
    # installation
    bash Miniconda3-${CONDA_VERSION}-Linux-x86_64.sh -p /app/.heroku/miniconda/ -b | indent
    # bash Miniconda3-3.7.3-Linux-x86_64.sh -p /app/.heroku/miniconda/ -b | indent
    
    rm -rf Miniconda3-${CONDA_VERSION}-Linux-x86_64.sh
    # rm -rf Miniconda3-3.7.3-Linux-x86_64.sh
    
    echo "----- after-install -----"
    
    conda --version
    conda update conda --quiet --yes | indent
fi


if [ -f conda-requirements.txt ]; then
    puts-step "Installing dependencies using Conda"
    conda install --no-deps --file conda-requirements.txt --yes | indent
fi

if [ -f environment.yml ]; then
    puts-step "Creating conda environment"
    # TODO: Use update if its already there
    # conda env remove --yes --quiet --name heroku-env
    conda env remove --yes --quiet --name heroku-env
    conda env create --name=heroku-env --file environment.yml
fi

# Clean up the installation environment .
# TODO Determine if removing packages might be bad here
conda clean -pt --yes > /dev/null

#!/usr/bin/env bash
# CONDA_VERSION=3.8.3 --> latest, Miniconda --> Miniconda3
if [ ! -d /app/.heroku/miniconda ]; then
    # puts-step "Preparing Python/Miniconda Environment (${CONDA_VERSION})"
    puts-step "Preparing Python/Miniconda Environment (3.7.3)"
    
    echo "----- pre-curl(install) -----"
    # curl -iO http://repo.continuum.io/miniconda/Miniconda-${CONDA_VERSION}-Linux-x86_64.sh
    curl -Os http://repo.continuum.io/miniconda/Miniconda3-3.7.3-Linux-x86_64.sh
    # "Miniconda-${CONDA_VERSION}-Linux-x86_64.sh"ã€€become a file name
    
    # installation
    # bash Miniconda-${CONDA_VERSION}-Linux-x86_64.sh -p /app/.heroku/miniconda/ -b | indent
    bash Miniconda3-3.7.3-Linux-x86_64.sh -p /app/.heroku/miniconda/ -b | indent
    
    rm -rf Miniconda3-3.7.3-Linux-x86_64.sh
    echo "----- after-curl -----"
    
    conda --version
    conda update conda --quiet --yes | indent
fi


if [ -f conda-requirements.txt ]; then
    puts-step "Installing dependencies using Conda"
    conda install --file conda-requirements.txt --yes
fi

if [ -f environment.yml ]; then
    puts-step "Creating conda environment"
    # TODO: Use update if its already there
    conda env remove --yes --quiet --name heroku-env
    conda env create --name=heroku-env --file environment.yml
fi

# Clean up the installation environment .
# TODO Determine if removing packages might be bad here
conda clean -pt --yes > /dev/null
